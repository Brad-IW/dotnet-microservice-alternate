version: '3.9'
services:
  db:
    container_name: api-db
    build:
      context: db
      dockerfile: Dockerfile 
  api:
    container_name: api
    ports:
      - 8050:80
    build:
      context: api/UserAPI
      dockerfile: Dockerfile
  kong-db:
    image: postgres:13-alpine
    restart: always 
    hostname: kong-database
    container_name: kong-db
    environment:
      POSTGRES_USER: "kong"
      POSTGRES_DB: "kong"
      POSTGRES_PASSWORD: "kong"
  kong-bootstrap:
    image: kong/kong-gateway:latest
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_USER: "kong"
      KONG_PG_PASSWORD: "kong"
    command: "kong migrations bootstrap"
    restart: "on-failure"
  kong:
    image: kong/kong-gateway:latest
    restart: always 
    hostname: kong
    container_name: kong
    depends_on:
      - kong-bootstrap
    ports:
     - "80:8000"
     - "8002:8002"
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_USER: "kong"
      KONG_PG_PASSWORD: "kong"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  service-builder:
    container_name: service-builder
    depends_on:
      - kong
    restart: "no"
    build:
      context: gateway
      dockerfile: Dockerfile
networks:
  default:
    name: kong-net